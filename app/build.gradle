plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jetbrains.kotlin.plugin.serialization'
   /* id 'org.jlleitschuh.gradle.ktlint' version '10.3.0'
    id 'org.jlleitschuh.gradle.ktlint-idea'  version '10.3.0'*/
}

apply from: "../versions.gradle"

android {
    compileSdkVersion 32
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "ru.skillbranch.sbdelivery"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("myreleasekey.keystore")
            storePassword "password"
            keyAlias "MyReleaseKey"
            keyPassword "password"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding false
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
       // kotlinCompilerVersion '1.6.10'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    kotlin {
        explicitApi = 'strict'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}


dependencies {
    implementation project(':proto')
    implementation project(':models')
    implementation project(':custom')

    //Common
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'


    //Livecycle
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    //implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //Hilt
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    implementation 'com.google.dagger:hilt-android:2.40.5'
    kapt 'com.google.dagger:hilt-android-compiler:2.40.5'

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"


    //Room
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //Paging library
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.caverock:androidsvg-aar:1.4'

    // Retrofit (network support)
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"


    //
    // https://mvnrepository.com/artifact/androidx.core/core-splashscreen
    //implementation("androidx.core:core-splashscreen:1.0.0-beta02")


    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"


    // image loader
    implementation("io.coil-kt:coil-compose:1.3.2")

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.1.1'

    //Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation "android.arch.core:core-testing:1.1.1"
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.4.0'

    androidTestImplementation "androidx.test.ext:junit:$junit_android_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}